fgdb <- "/Users/liding/Downloads/china.mdb"
subset(ogrDrivers(), grepl("mdb", name))
ogrListLayers(fgdb)
library(RDOBC)
library(RODBC)
help(package="RODBC")
odbcCloseAll()
temp <- odbcConnectAccess("/Users/liding/Downloads/china.mdb“)
temp <- odbcConnectAccess("/Users/liding/Downloads/china.mdb")
temp <- odbcConnect("/Users/liding/Downloads/china.mdb")
exp(0.754)
exp(-0.754)
exp(0.412)
exp(-0.511)
exp(0.263)
exp(0.354)
exp(0.345)
exp(0.159)
library(rattle)
2.4*13
libs <- c("plyr", "tidyverse", "ggplot2", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg, character.only = TRUE)
sapply(libs, inpkg)
install.packages(x)
install.packages("arm")
help(package="ggplot2")
library("sfsmisc")
help(package="sfsmisc")
help(package= "rgl")
help(package= "foreign")
help(package= "lattice")
help(package= "MASS")
help(package= "mle4")
install.packages("mle4")
help(package= "lme4")
help(package= "lmtest")
help(package= "sandwich")
help(package= "viridis")
help(package= "geosphere")
help(package= "network")
install.package("network")
install.packages("network")
help(package= "network")
help(package= "png")
help(package= "")
help(package= "extrafont")
if (!require(tidyvese)) install.packages('tidyverse')
if (!require(tidyverse)) install.packages('tidyverse')
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
install.packages(x)
install.packages(x)
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(){
if (!require()) install.packages()
}
sapply(libs, inpkg)
sapply(libs, inpkg)
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
libs <- c("plyr111", "tidyverse111", "arm111")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
help(package= "scales")
help("matrix")
library(dplyr)
library(readr)
library(ggplot2)
library(gganimate)
help(datatable)
help(data.table)
help(filter)
library(readr)
Dataset <- read_csv("E/Bdata/liding17/2018R/data/Dataset.csv")
View(Dataset)
View(Dataset)
dim(Dataset)
names(Dataset)
Dataset$newage <- 2017+Dataset$age
names(Dataset)
library(tidyverse)
mpg
mpg
?mpg
ggplot(data = mpg)
p <- ggplot(data = mpg)
p
p+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)
+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p
plot(p)
nrow(mpg)
ncol(mpg)
ggplot(data = mpg)+
geom_point(aes(x = hwy, y = cyl))
443*0.0068
devtools::install_github(ryapric/readit)
devtools::install_github("ryapric/readit")
knit_with_parameters('~/E/Bdata/liding17/2018R/l04Rbasic/lesson4_Rbasic.Rmd')
library(tidyverse)
if(!require(car)) install.packages("car")
installed.packages("tinytex")
installed.packages("tinytex")
install.packages("tinytex")
devtools::install_github("rstudio/rticles")
system("tex -v")
system("xelatex -v")
help(package="rticles")
27-9
devtools::install_github('yihui/xaringan')
install.packages("tufte", type = "source")
install.packages("formatR")
1887/5
if(!require(sjmisc)) install.packages("sjmisc")
if(!require(sjPlot)) install.packages("sjPlot")
library(tidyverse)
library(readr)
bike <- read_delim("../data/nc_bike_crash.csv", ";",
escape_double = FALSE, trim_ws = TRUE)
bike <- read.csv("nc_bike_crash.csv",
sep = ";",
stringsAsFactors = FALSE) %>%
tbl_df()
bike <- read.csv("../data/nc_bike_crash.csv",
sep = ";",
stringsAsFactors = FALSE) %>%
tbl_df()
class(bike)
class(data)
str(data)
head(data)
dim(data)
names(data)
dim(bike)
str(bike)
library(haven)
cgss2003 <- read_dta("../data/cgss2003.dta",encoding = "utf-8")
library(haven)
cgss2003 <- read_sav("../data/CGSS2003b.sav")
str(cgss2003$sitetype)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
cgss2003 %>%  count(sitetype)
ggplot(cgss2003, aes(x=sitetype)) +
geom_bar() +
scale_x_discrete(drop=TRUE)
if(!require(sjmisc)) install.packages("sjmisc")
if(!require(sjPlot)) install.packages("sjPlot")
sjt.frq(cgss2003$sitetype)
sjPlot::set_theme(theme.font ='STXihei' ) # STHeiti也可
cgss2003  %>% select(sitetype) %>%  sjplot(fun="frq")
cgss2003  %>%
filter(sitetype>0) %>%
select(sitetype) %>%
haven::as_factor() %>%
droplevels() %>%
sjplot(fun="frq",axis.title="调查地类型")
cgss2003  %>%
select(sitetype) %>%
sjmisc::to_label(drop.levels=TRUE) %>%
sjplot(fun="frq",axis.title="调查地类型")
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
count()
cgss2003  %>%
select(birth05) %>%
count()
cgss2003  %>%
select(birth05) %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
table()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
class()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(birth05,binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,binwidth=5)
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,data=.,binwidth=5)
library(haven)
cgss2003 <- read_sav("../data/CGSS2003.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003)
cgss2003 <- sjmisc::to_label(cgss2003)
w <- which(sapply(cgss2003, class) == 'labelled')
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)
cgss <- foreign::read.spss("../data/CGSS2003.sav"
,reencode = "GB2312",
to.data.frame=TRUE,max.value.labels=50)
table(cgss$sex)
attr(cgss, "variable.labels")[1:6]
attr(cgss, "label.table")[6]
str(cgss$sitetype)
cgss[cgss=="无填答/不回答"] <- NA
cgss[cgss=="不知道/说不清"] <- NA
cgss[cgss=="不适合"] <- NA
cgss[cgss=="不适用"] <- NA
cgss <- droplevels(cgss)
ggplot(data=cgss,aes(x=sitetype))+geom_bar() +theme(text=element_text(family="STKaiti"))
library(devtools)
options(download.file.method = "wininet")
install_git("https://github.com/huashan/ezdf")
install_github('huashan/pander')
install.packages("pander")
install.packages("pander")
options(download.file.method =  "auto")
install.packages("pander")
library(ezdf)
install_git("https://github.com/huashan/ezdf")
devtools::install_github("huashan/ezdf")
library(ezdf)
dat <- readStata("../data/cgss2013",varNameEncoding="GB2312",charEncoding="GBK")
dat <- readStata("../data/cgss2003",varNameEncoding="GB2312",charEncoding="GBK")
dat <- readStata("../data/cgss2003.dta",varNameEncoding="GB2312",charEncoding="GBK")
cgss2003  %>%
qplot(x=birth05,data=.,binwidth=5)
help(package="pander")
tbl(dat, township ~ sex)
tbl(dat, township ~ commtype)
tbl(dat, commtype)
tbl(dat,commtype)
tbl(dat,~ commtype)
table1
table2
table3
table4a
table4b
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year, wt = cases)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
table2
spread(table2, key = type, value = count)
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health[1:10, ]
health_wide <- reshape(health, v.names = "score", idvar = "id",
timevar = "trial", direction = "wide")
health_wide[1:5, ]
head(reshape(health_wide))
health_long <- reshape(health_wide, idvar = "id", direction = "long")
health_long[1:15, ]
format(Sys.Date(),format="%m %d %Y")
format(Sys.Date(),format="%m - %d %Y")
format(Sys.Date(),format="%m - %d - %Y")
as_datetime(today())
library(lubridate)
as_datetime(today())
(datetime <- ymd_hms("2016-07-08 12:34:56"))
year(datetime) <- 2020
datetime
library(tidyverse)
library(tidyverse)
library(haven)
cgss2003 <- read_sav("../data/CGSS2003b.sav")
str(cgss2003$sitetype)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
attr(cgss2003$sitetype,"names")
attr(attr(cgss2003$sitetype,"labels"),"names")
attr(attr(cgss2003$sitetype,"labels"),"names")[7]
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,data=.,binwidth=5)
cgss <- foreign::read.spss("../data/CGSS2003.sav"
,reencode = "GB2312",
to.data.frame=TRUE,max.value.labels=50)
table(cgss$sex)
write.csv(bike,"bike.csv")
getwd()
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health
health2 <- spread(health,key=trial,value=score)
health2
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
health1$trial <- as.numeric(health1$trial)
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
library(car)
scatter3d(prestige ~ log(income) + education | type, data=Prestige,
ellipsoid=TRUE, parallel=FALSE,revolution=TRUE)
scatter3d(prestige~education+income, data=Duncan, fit="linear",
residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=TRUE,
id.method='mahal', id.n = 3, revolutions=3)
library(rgl)
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
library(plyr)
library(lattice)
func3d <- function(x,y) {
sin(x^2/2 - y^2/4) * cos(2*x - exp(y))
}
vec1 <- vec2 <- seq(0,2,length=30)
para <- expand.grid(x=vec1,y=vec2)
result6 <- mdply(.data=para,.fun=func3d)
wireframe(V1~x*y,data=result6,scales = list(arrows = FALSE),
drape = TRUE, colorkey = F)
library(ggplot2)
qplot(income,prestige,
xlab="Average Income", ylab="Prestige Score",
geom=c("point", "smooth"), data=car::Prestige)
qplot(x = sugars, y = calories, color = as.factor(shelf),
data = UScereal)
if(!require(MASS)) install.packages("MASS")
qplot(x = sugars, y = calories, color = as.factor(shelf),
data = UScereal)
qplot(cty,hwy,
data=mpg,
geom=c("point", "smooth"))
qplot(hwy,data=mpg,binwidth=0.5) +
scale_x_continuous(breaks =10:45) +
facet_wrap(~ drv, ncol = 1)
qplot(hwy,data=mpg,binwidth=0.5) +
scale_x_continuous(breaks =10:45) +
facet_wrap(~ drv, nrow = 1)
p1 <- ggplot(UScereal)
p1
p <- p1 + geom_histogram(aes(x = calories))
print(p)
p1 + geom_histogram(aes(x = calories))
summary(p)
ggplot(UScereal)+
geom_histogram(aes(x = calories))
p1 <- ggplot(UScereal, aes(x = calories))
p1 + geom_dotplot()
p1 + geom_density()
p1 + geom_histogram(binwidth = 10)
p1 + geom_histogram(binwidth = 20)
p1 + geom_histogram(binwidth = 30)
p1 +
geom_histogram(binwidth = 10) +
xlab('Calories in a Single Cup') +
ylab('Frequency') +
ggtitle('Distribution of Calories in US Cereals') +
theme_bw()
p1 + geom_histogram(binwidth = 10) + xlab('Calories in a Single Cup') +
ylab('Frequency') + ggtitle('Distribution of Calories in US Cereals') +
theme_bw() + theme(text = element_text(size = 30))
p1 + geom_histogram(binwidth = 10) + xlab('Calories in a Single Cup') +
ylab('Frequency') + ggtitle('Distribution of Calories in US Cereals') +
theme_bw() + theme(text = element_text(size = 20))
p2 <- ggplot(UScereal, aes(x = sugars, y = calories, color = mfr))
p2  + geom_point() + geom_line()
qplot(cty,hwy,
data=mpg,
geom=c("point", "smooth"))
qplot(cty,hwy,
data=mpg,
geom=c("jitter", "smooth"))
qplot(cty,hwy,
data=mpg,
geom=c("point", "smooth"))
qplot(cty,hwy,
data=mpg,
geom=c("jitter", "smooth"))
p <- ggplot(mpg,aes(x=class))+
geom_bar()
print(p)
ggplot(mpg,
aes(x=reorder(class,class,
function(x) -length(x)))) +
geom_bar()
reorder(mpg$class,mpg$class,
function(x) -length(x))
names(mpg)
str(mpg$class)
attributes(mpg$class)
levels(mpg$class)
class(mpg$class)
theTable <- within(mpg,
class <- factor(class,
levels=names(sort(table(class),
decreasing=TRUE))))
ggplot(theTable,aes(x=class))+geom_bar( )
head(mpg)
fdata <- as.data.frame(sort(table(mpg$class),decreasing = TRUE))
fdata
table(mpg$class)
sort(table(mpg$class),decreasing = TRUE)
mpg$year <- factor(mpg$year)
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(color='black')
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(color='black',
position=position_dodge())
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(color='black', position=fill())
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(color='black', position="fill")
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(color='black',
position=position_dodge())
ggplot(mpg,aes(x=class,fill=year))+
geom_bar(position='fill')
# 饼图
ggplot(mpg, aes(x = factor(1), fill = factor(class))) +
geom_bar(width = 1)+
coord_polar(theta = "y")
setwd("/Users/liding/E/Bdata/liding17/2017R/lesson7")
data <- read.csv('soft_impact.csv',T)
head(data)
library(tidyr)
data.melt <- gather(data,key=variable,value=value,-Year )
data <- read.csv('../data/soft_impact.csv',T)
data <- read.csv('./data/soft_impact.csv',T)
setwd("/Users/liding/E/Bdata/liding17/2018R/")
data <- read.csv('/data/soft_impact.csv',T)
head(data)
data <- read.csv('/Users/liding/E/Bdata/liding17/2018R/data/soft_impact.csv',T)
head(data)
library(tidyverse)
library(tidyr)
data.melt <- gather(data,key=variable,value=value,-Year )
ggplot(data.melt,aes(x=Year,y=value,
group=variable,fill=variable))+
geom_area(color='black',size=0.3,
position=position_fill())+
scale_fill_brewer()
head(data)
head(data.melt)
data.melt
data
library(reshape2)
library(ggplot2)
# 分别绘制两个变量的取值
d <- data.frame(A=c(1:10), B=c(11:20))
#id
d$ind <- seq_along(d$A)
ggplot(d, aes(ind, y = value, fill = variable,col=variable)) +
geom_bar(aes(y = B, col=NA,fill = "B")
,stat='identity', position='dodge')+
geom_bar(aes(y = A, col = "A",fill=NA)
,stat='identity')
d
d.m <- melt(d, id.var='ind')
# 作图
ggplot(d.m, aes(x=ind, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(d.m,aes(x=ind,y=value,fill=factor(variable)))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Gender",
breaks=c("A", "B"),
labels=c("Male", "Female"))+
xlab("Beverage")+ylab("Mean Percentage")
df=data.frame(score1=c(4,2,3,5,7,6,5,6,4,2,3,5,4,8),
score2=c(4,5,3,5,7,6,5,9,4,2,3,5,4,8),
age=c(18,18,23,50,19,39,19,23,22,22,40,35,22,16))
ggplot(df, aes(x=factor(age), y=score1)) +
stat_summary(fun.y="mean", geom="bar")
# 分类，然后在ggplot中汇总
df.m<- melt(df,id="age")
ggplot(df.m, aes(x=factor(age), y=value, fill=factor(variable))) +
stat_summary(fun.y=mean, geom="bar",position=position_dodge(0.1))
#
# 也可以先汇总好，然后在ggplot中作图
temp = aggregate(list(score = df$score1), list(age = factor(df$age)), mean)
ggplot(data=temp, aes(x = age, y=score)) +
geom_bar(stat='identity')
