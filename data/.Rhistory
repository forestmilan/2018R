setwd("C:/Rtextbook")
cgss2015 <- read_dta("C:/data/cgss2015/cgss2015_14.dta")
dim(cgss2015) #看数据结构
View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
str(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
cgss2015[cgss2015=="不知道"] <- NA
cgss2015[cgss2015=="不适用"] <- NA
cgss2015[cgss2015=="无法回答"] <- NA
cgss <- droplevels(cgss2015)
#######形成新的数据
newcgss <- subset(cgss, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
dim(newcgss)
View(newcgss) #看结果
#s1城乡  a62家庭收入  a8b（工作收入） a13(身高）a14（体重）a301(出生年）
#a36(幸福感）a15(健康）a10(政治面貌）a7a(教育） a2(性别）
names(newcgss)
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
#数值型变量
summary(newcgss$salary)
library(psych)
describe(newcgss$salary,skew=FALSE)
#分类变量
counts <- table(newcgss$sex)
counts
sjp.frq(newcgss$sex)
sjp.frq(newcgss$stype)
sjt.frq(newcgss$happy,encoding= "UTF-8")
########此时 前面的变量正常，但是stackfre开始报错，无法运行
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
sjt.stackfrq(cgss[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
sjt.xtab(newcgss$happy, newcgss$stype,encoding= "UTF-8")
sjt.xtab(newcgss$happy, newcgss$stype,show.row.prc = TRUE,
show.col.prc = TRUE,encoding= "UTF-8")
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
cgss2015[cgss2015=="不知道"] <- NA
cgss2015[cgss2015=="不适用"] <- NA
cgss2015[cgss2015=="无法回答"] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
str(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
cgss <- droplevels(cgss2015)
#######形成新的数据
newcgss <- subset(cgss, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
dim(newcgss)
View(newcgss) #看结果
#s1城乡  a62家庭收入  a8b（工作收入） a13(身高）a14（体重）a301(出生年）
#a36(幸福感）a15(健康）a10(政治面貌）a7a(教育） a2(性别）
names(newcgss)
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
#数值型变量
summary(newcgss$salary)
library(psych)
describe(newcgss$salary,skew=FALSE)
#分类变量
counts <- table(newcgss$sex)
counts
sjp.frq(newcgss$sex)
sjp.frq(newcgss$stype)
sjPlot::sjp.setTheme(theme.font ='STXihei' )
sjt.frq(newcgss$happy,encoding= "UTF-8")
sjt.frq(newcgss$happy,encoding= "UTF-8")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
cgss2015[cgss2015=="不知道"] <- NA
cgss2015[cgss2015=="不适用"] <- NA
cgss2015[cgss2015=="无法回答"] <- NA
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
#cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
#cgss2015[cgss2015=="不知道"] <- NA
#cgss2015[cgss2015=="不适用"] <- NA
#cgss2015[cgss2015=="无法回答"] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
#str(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
cgss <- droplevels(cgss2015)
#######形成新的数据
newcgss <- subset(cgss, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
dim(newcgss)
View(newcgss) #看结果
#s1城乡  a62家庭收入  a8b（工作收入） a13(身高）a14（体重）a301(出生年）
#a36(幸福感）a15(健康）a10(政治面貌）a7a(教育） a2(性别）
names(newcgss)
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
#数值型变量
summary(newcgss$salary)
library(psych)
describe(newcgss$salary,skew=FALSE)
#分类变量
counts <- table(newcgss$sex)
counts
sjp.frq(newcgss$sex)
sjp.frq(newcgss$stype)
sjPlot::sjp.setTheme(theme.font ='STXihei' )
sjt.frq(newcgss$happy,encoding= "UTF-8")
########此时 前面的变量正常，但是stackfre开始报错，无法运行
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
#View(cgss2015)
newcgss <- subset(cgss2015, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
newcgss <- sjlabelled::drop_labels(newcgss)
sjt.frq(newcgss$happy,encoding= "UTF-8")
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
?sjPlot
sjPlot::sjPlot-themes(theme.font ='STXihei' )
sjPlot::theme_sjplot(base_font ='STXihei' )
sjPlot::theme_sjplot(base_family ='STXihei' )
sjPlot::set_theme(base_family ='STXihei' )
sjPlot::set_theme(theme.font ='STXihei' )
cgss2003 %>%
select(sitetype) %>% sjPlot::sjplot(fun="frq")
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
cgss <- droplevels(cgss2015)
newcgss <- subset(cgss, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
dim(newcgss)
names(newcgss)
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
summary(newcgss$salary)
library(psych)
describe(newcgss$salary,skew=FALSE)
counts <- table(newcgss$sex)
counts
sjp.frq(newcgss$sex)
sjp.frq(newcgss$stype)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
#View(cgss2015)
newcgss <- subset(cgss2015, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
newcgss <- sjlabelled::drop_labels(newcgss)
sjt.frq(newcgss$happy,encoding= "UTF-8")
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
#cgss2015 <- droplevels(cgss2015)
#cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
#cgss2015[cgss2015=="不知道"] <- NA
#cgss2015[cgss2015=="不适用"] <- NA
#cgss2015[cgss2015=="无法回答"] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
#str(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
#cgss <- droplevels(cgss2015)
#######形成新的数据
newcgss <- subset(cgss, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
dim(newcgss)
#View(newcgss) #看结果
#s1城乡  a62家庭收入  a8b（工作收入） a13(身高）a14（体重）a301(出生年）
#a36(幸福感）a15(健康）a10(政治面貌）a7a(教育） a2(性别）
names(newcgss)
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
dim(cgss2015) #看数据结构
#View(cgss2015[(1:10),])
########数据清理 （参考李丁 ）
cgss2015[cgss2015<=-1] <- NA
#cgss2015 <- droplevels(cgss2015)
#cgss2015[cgss2015=="无填答/拒绝回答"] <- NA
#cgss2015[cgss2015=="不知道"] <- NA
#cgss2015[cgss2015=="不适用"] <- NA
#cgss2015[cgss2015=="无法回答"] <- NA
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- dropl1evels(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- drop1evels(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
#cgss2015 <- drop1evels(cgss2015)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
#cgss2015 <- drop1evels(cgss2015)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
#cgss2015 <- drop1evels(cgss2015)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
sjt.stackfrq(cgss2015[, start end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
sjt.stackfrq(cgss2015[, c(start, end)],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- drop1evels(cgss2015)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
cgss2015 <- sjmisc::to_label(cgss2015)
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
View(cgss2015)
newcgss <- subset(cgss2015, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
newcgss <- sjlabelled::drop_labels(newcgss)
sjt.frq(newcgss$happy,encoding= "UTF-8")
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
w <- which(sapply(cgss2015, class) == 'labelled')
cgss2015[w] <- lapply(cgss2015[w],
function(x) as.numeric(as.character(x)))
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
#View(cgss2015)
newcgss <- subset(cgss2015, select = c(s1,a301,a62,a8b,a13,a14,a36,a15,a10,a7a,a2))
names(newcgss)[1:11] <- c("stype","birth","fin", "salary", "height", "weight","happy","health","poli","educ","sex")
newcgss <- sjlabelled::drop_labels(newcgss)
sjt.frq(newcgss$happy,encoding= "UTF-8")
start <- which(colnames(cgss2015) == "b151")
# receive last item of COPE-index scale
end <- which(colnames(cgss2015) == "b159")
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- read_dta("/Users/liding/DATA/CGSS/2015/2015cgss20160803.dta")
cgss2015[cgss2015<=-1] <- NA
cgss2015 <- droplevels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
cgss2015 <- sjlabelled::drop_labels(cgss2015)
sjt.stackfrq(cgss2015[, start:end],encoding= "UTF-8" ,altr.row.col = TRUE,show.n=FALSE)
2017-72
17*6.6
1300000000*0.5
1300000000*0.05
130000*0.05
488+580+299+299+381.6+100
1268/16411
8547/1268
3900/2170
2200/1400/(3800/8547)
2200/2921/(3800/8547)
130*2500
library(readxl)
pppop <- read_excel("~/E/研究/农村研究/三村调查/固原调查材料/官方户籍统计信息/2011年5月河东村户籍信息.xls")
names(pppop) <- c("lid","vname","id","name","gender","eth","bob","add","edu")
pppop$yob <- as.numeric(substr(pppop$bob,1,4))
library(tidyverse)
head(pppop)
pppop %>%
sjPlot::sjtab(yob,eth,fun="xtab")
pppop %>% filter(eth=="汉"|eth=="回") %>%
sjPlot::sjtab(yob,eth,fun="xtab")
pppop %>%
sjPlot::sjtab(yob,gender,fun="xtab")
pppop %>% filter(eth=="汉"|eth=="回") %>%
sjPlot::sjtab(yob,eth,gender,fun="xtab")
library(rattle)
library(rattle)
library(rattle)
library(rgdal)
fgdb <- "/Users/liding/Downloads/china.mdb"
subset(ogrDrivers(), grepl("mdb", name))
ogrListLayers(fgdb)
library(RDOBC)
library(RODBC)
help(package="RODBC")
odbcCloseAll()
temp <- odbcConnectAccess("/Users/liding/Downloads/china.mdb“)
temp <- odbcConnectAccess("/Users/liding/Downloads/china.mdb")
temp <- odbcConnect("/Users/liding/Downloads/china.mdb")
exp(0.754)
exp(-0.754)
exp(0.412)
exp(-0.511)
exp(0.263)
exp(0.354)
exp(0.345)
exp(0.159)
library(rattle)
2.4*13
libs <- c("plyr", "tidyverse", "ggplot2", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg, character.only = TRUE)
sapply(libs, inpkg)
install.packages(x)
install.packages("arm")
help(package="ggplot2")
library("sfsmisc")
help(package="sfsmisc")
help(package= "rgl")
help(package= "foreign")
help(package= "lattice")
help(package= "MASS")
help(package= "mle4")
install.packages("mle4")
help(package= "lme4")
help(package= "lmtest")
help(package= "sandwich")
help(package= "viridis")
help(package= "geosphere")
help(package= "network")
install.package("network")
install.packages("network")
help(package= "network")
help(package= "png")
help(package= "")
help(package= "extrafont")
if (!require(tidyvese)) install.packages('tidyverse')
if (!require(tidyverse)) install.packages('tidyverse')
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
install.packages(x)
install.packages(x)
libs <- c("plyr", "tidyverse", "arm")
inpkg <- function(){
if (!require()) install.packages()
}
sapply(libs, inpkg)
sapply(libs, inpkg)
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
libs <- c("plyr111", "tidyverse111", "arm111")
inpkg <- function(x){
if (!require(x)) install.packages(x)
}
sapply(libs, inpkg)
help(package= "scales")
help("matrix")
library(dplyr)
library(readr)
library(ggplot2)
library(gganimate)
help(datatable)
help(data.table)
help(filter)
library(readr)
Dataset <- read_csv("E/Bdata/liding17/2018R/data/Dataset.csv")
View(Dataset)
View(Dataset)
dim(Dataset)
names(Dataset)
Dataset$newage <- 2017+Dataset$age
names(Dataset)
library(tidyverse)
mpg
mpg
?mpg
ggplot(data = mpg)
p <- ggplot(data = mpg)
p
p+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)
+ geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p <- ggplot(data = mpg)+
geom_point(aes(x = displ, y = hwy))
p
plot(p)
nrow(mpg)
ncol(mpg)
ggplot(data = mpg)+
geom_point(aes(x = hwy, y = cyl))
443*0.0068
devtools::install_github(ryapric/readit)
devtools::install_github("ryapric/readit")
knit_with_parameters('~/E/Bdata/liding17/2018R/l04Rbasic/lesson4_Rbasic.Rmd')
library(haven)
library(tidyverse)
setwd("/Users/liding/E/Bdata/liding17/2018R/data/")
cgss2013 <- read_spss("cgss2013.sav")
library(tidyverse)
if (!require(tidyvese)) install.packages('tidyverse')
library(tidyverse
)
help(package="ggplot2")
devtools::install_github("ggplot2")
install.packages("devtools")
devtools::install_github("ggplot2")
devtools::install_github("hadley/ggplot2")
library(tidyverse)
